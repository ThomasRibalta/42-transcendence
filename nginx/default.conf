server {
    listen 80;
    server_name localhost;

    # Redirect all HTTP requests to HTTPS
    return 308 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name localhost;

    # Send access logs to Logstash via UDP
    access_log syslog:server=logstash:5000,tag=nginx_access,severity=info;

    # Send error logs to Logstash via UDP
    error_log syslog:server=logstash:5000,tag=nginx_error,severity=error;

	ssl_certificate /etc/nginx/ssl/selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

    # Enable Gzip for compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

    location /api/rgpd/ {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_rgpd:4570/;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /kibana/ {
        auth_request /api/auth/verify-token-admin-service;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://kibana:5601/kibana/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
    }

    location /pongsocket/ {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_pong:4569;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X_Real_IP $remote_addr;
        
        proxy_set_header Authorization $http_authorization;
    }

    location /friendsocket/ {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_friend:4560;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X_Real_IP $remote_addr;
        
        proxy_set_header Authorization $http_authorization;
    }

    # Protected Route: Verify Code Endpoint
    location /api/auth/validate-code {
        auth_request /api/auth/verify-token-user-code-service;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_user_management:4567/api/auth/validate-code;
        proxy_set_header Authorization $http_authorization;
    }

    # Protected SSR Code Endpoint
    location /validate-code {
        auth_request /api/auth/verify-token-user-code-service;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_ssr:4568/validate-code;
        proxy_set_header Authorization $http_authorization;
    }

    location /pongserv {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_ssr:4568/pongserv;

        proxy_set_header Authorization $http_authorization;
    }

    location /pongserv-ranked {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_ssr:4568/pongserv-ranked;

        proxy_set_header Authorization $http_authorization;
    }

    location /rgpd {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_ssr:4568/rgpd;

        proxy_set_header Authorization $http_authorization;
    }

    location /ranking/ {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_ssr:4568/ranking/;
        proxy_set_header Authorization $http_authorization;
    }

    location /profile {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_ssr:4568/profile;
        proxy_set_header Authorization $http_authorization;
    }

    location /edit-profile {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_ssr:4568/edit-profile;
        proxy_set_header Authorization $http_authorization;
    }

    location /tournaments {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_ssr:4568/tournaments;
        proxy_set_header Authorization $http_authorization;
    }

    location /create-tournament {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_ssr:4568/create-tournament;
        proxy_set_header Authorization $http_authorization;
    }

    location /tournament/ {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_ssr:4568/tournament/;
        proxy_set_header Authorization $http_authorization;
    }
    
    # Root location for SSR
    location / {
        proxy_pass http://ruby_ssr:4568;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static files location
    location /static/ {
        proxy_pass http://ruby_ssr:4568;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Public Routes (42 Authentication)
    location /logwith42 {
        proxy_pass http://ruby_user_management:4567/api/auth/logwith42;
    }

    location /api/auth/callback {
        proxy_pass http://ruby_user_management:4567/api/auth/callback;
    }

    location /api/auth/register {
        proxy_pass http://ruby_user_management:4567/api/auth/register;
		#log
		error_log /var/log/nginx/auth_register_error.log debug;
    }

    location /api/auth/login {
        proxy_pass http://ruby_user_management:4567/api/auth/login;
    }

    location /api/auth/logout {
        proxy_pass http://ruby_user_management:4567/api/auth/logout;
    }

    # Public Routes (Token Management)
    location /api/auth/refresh {
        proxy_pass http://ruby_user_management:4567/api/auth/refresh;
    }

    # Public Routes (Token Verification Endpoints)
    location /api/auth/verify-token-user {
        proxy_pass http://ruby_user_management:4567/api/auth/verify-token-user;
    }

    location /api/auth/verify-token-user-code {
        proxy_pass http://ruby_user_management:4567/api/auth/verify-token-user-code;
		#log
		error_log /var/log/nginx/auth_register_error.log debug;
    }

    location /api/auth/verify-token-admin {
        proxy_pass http://ruby_user_management:4567/api/auth/verify-token-admin;
    }

    location /api/user/ {
    auth_request /api/auth/verify-token-user;
    auth_request_set $auth_status $upstream_status;

    error_page 401 = @error401;
    error_page 403 = @error403;

    proxy_pass http://ruby_user_management:4567/api/user/;
    proxy_set_header Authorization $http_authorization;

    proxy_set_header Accept-Encoding "";
    proxy_set_header Connection "";
    gzip off;
    }

    location /api/add-friend {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_user_management:4567/api/add-friend;
        proxy_set_header Authorization $http_authorization;
    }

    location /api/remove-friend {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_user_management:4567/api/remove-friend;
        proxy_set_header Authorization $http_authorization;
    }

    location /api/friends/ {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_user_management:4567/api/friends/;
        proxy_set_header Authorization $http_authorization;
    }

    location /api/friend/ {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_user_management:4567/api/friend/;
        proxy_set_header Authorization $http_authorization;
    }

    location /api/tournament/ {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_pong_api:4571/api/tournament/;
        proxy_set_header Authorization $http_authorization;
    }

    location /api/tournaments/ {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_pong_api:4571/api/tournaments/;
        proxy_set_header Authorization $http_authorization;
    }

    location /api/tournament/create {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_pong_api:4571/api/tournament/create;
        proxy_set_header Authorization $http_authorization;
    }

    location /api/tournament/start {
        auth_request /api/auth/verify-token-user;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_pong_api:4571/api/tournament/start;
        proxy_set_header Authorization $http_authorization;
    }

    # route img

    location /img {
        proxy_pass http://image_ruby:4572;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Connection "";
        proxy_buffering off;
    }

     location /adminer {
        auth_request /api/auth/verify-token-admin-service;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://adminer:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
    }

    # Internal Token Verification Services
    location = /api/auth/verify-token-user-service {
        internal;
        proxy_pass http://ruby_user_management:4567/api/auth/verify-token-user;
        proxy_set_header Authorization $http_authorization;
    }

    location = /api/auth/verify-token-user-code-service {
        internal;
        proxy_pass http://ruby_user_management:4567/api/auth/verify-token-user-code;
        proxy_set_header Authorization $http_authorization;
    }

    location = /api/auth/verify-token-admin-service {
        internal;
        proxy_pass http://ruby_user_management:4567/api/auth/verify-token-admin;
        proxy_set_header Authorization $http_authorization;
    }

    location = /favicon.ico {
        access_log off;  # Ne pas enregistrer les logs pour cette requête
        log_not_found off;  # Ne pas enregistrer les erreurs 404
        return 204;  # Répondre avec un statut 204 No Content
    }

    # Protected Routes for Authenticated Users (e.g., /game/)
    location /game/ {
        auth_request /api/auth/verify-token-user-service;  # Use basic token check
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_user_management:4567;
        proxy_set_header Authorization $http_authorization;
    }

    # Admin Protected Routes
    location /admin/ {
        auth_request /auth/verify-token-admin-service;
        auth_request_set $auth_status $upstream_status;

        error_page 401 = @error401;
        error_page 403 = @error403;

        proxy_pass http://ruby_user_management:4567;
        proxy_set_header Authorization $http_authorization;
    }

    # Error Handling
    location @error401 {
        return 308 https://localhost/api/auth/logout;
        add_header Content-Type text/plain;
    }

    location @error403 {
        return 308 https://localhost/api/auth/logout;
        add_header Content-Type text/plain;
    }
}
